[project]
name = "dataflow-pipelines-example"
version = "0.1.0"
description = "Comprehensive Google Dataflow pipeline examples for GCS-to-BigTable and Pub/Sub streaming"
requires-python = ">=3.9,<3.12"
readme = "README.md"
license = {file = "../../LICENSE"}
authors = [
    {name = "Python Commons Team", email = "team@pythoncommons.org"}
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
dependencies = [
    "pydantic-settings>=2.10.1",
]

[tool.uv.workspace]
members = [
    "common",
    "pipelines/batch/user_events",
    "pipelines/batch/transaction_data",
    "pipelines/batch/audit_logs",
    "pipelines/streaming/real_time_events",
    "pipelines/streaming/clickstream_analytics",
    "pipelines/streaming/iot_sensors",
    "pipelines/streaming/fraud_detection"
]

[tool.uv]
dev-dependencies = [
    "apache-beam[gcp]>=2.50.0",
    "google-cloud-storage>=2.10.0",
    "google-cloud-bigtable>=2.20.0",
    "google-cloud-bigquery>=3.11.0",
    "google-cloud-pubsub>=2.18.0",
    "google-cloud-monitoring>=2.15.0",
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-mock>=3.11.0",
    "pytest-cov>=4.1.0",
    "black>=23.0.0",
    "ruff>=0.1.0",
    "mypy>=1.5.0",
    "testcontainers>=3.7.0",
]

[tool.ruff]
target-version = "py39"
line-length = 100
select = [
    "E",    # pycodestyle errors
    "W",    # pycodestyle warnings
    "F",    # pyflakes
    "I",    # isort
    "B",    # flake8-bugbear
    "C4",   # flake8-comprehensions
    "UP",   # pyupgrade
    "N",    # pep8-naming
    "SIM",  # flake8-simplify
    "TCH",  # flake8-type-checking
    "RUF",  # Ruff-specific rules
]
ignore = [
    "E501",  # line too long - handled by black
    "B008",  # do not perform function calls in argument defaults
]

[tool.black]
line-length = 100
target-version = ["py39"]

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
ignore_missing_imports = true
show_error_codes = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
addopts = [
    "--cov=common",
    "--cov=pipelines",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
    "-v",
    "--strict-markers",
    "--asyncio-mode=auto",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "batch: marks tests for batch pipelines",
    "streaming: marks tests for streaming pipelines",
]

[tool.hatch.build.targets.wheel]
packages = ["common/src"]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"
